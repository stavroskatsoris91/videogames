{
  "_args": [
    [
      "github:mrotaru/grunt-cache-bust",
      "/Users/stavros/Documents/thortful/thortful-jarvis"
    ]
  ],
  "_from": "mrotaru/grunt-cache-bust",
  "_id": "grunt-cache-bust@1.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/grunt-cache-bust",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/mrotaru/grunt-cache-bust/master/package.json",
      "gitUrl": "git://github.com/mrotaru/grunt-cache-bust.git",
      "httpsUrl": "git+https://github.com/mrotaru/grunt-cache-bust.git",
      "shortcut": "github:mrotaru/grunt-cache-bust",
      "ssh": "git@github.com:mrotaru/grunt-cache-bust.git",
      "sshUrl": "git+ssh://git@github.com/mrotaru/grunt-cache-bust.git",
      "type": "github"
    },
    "name": null,
    "raw": "github:mrotaru/grunt-cache-bust",
    "rawSpec": "github:mrotaru/grunt-cache-bust",
    "scope": null,
    "spec": "github:mrotaru/grunt-cache-bust",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/mrotaru/grunt-cache-bust.git#96de82db3224cd7615f8f7a7378fc3c931d72a9b",
  "_shasum": "a1030948356061729422729840ddd64274adfee0",
  "_shrinkwrap": null,
  "_spec": "github:mrotaru/grunt-cache-bust",
  "_where": "/Users/stavros/Documents/thortful/thortful-jarvis",
  "author": {
    "email": "hi@benholland.me",
    "name": "Ben Holland"
  },
  "bugs": {
    "url": "https://github.com/hollandben/grunt-cache-bust/issues"
  },
  "dependencies": {
    "grunt": "~0.4.5"
  },
  "description": "Bust static assets from the cache using content hashing",
  "devDependencies": {
    "grunt-contrib-clean": "~0.7.0",
    "grunt-contrib-copy": "~0.8.0",
    "grunt-contrib-jshint": "~0.12.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-watch": "~0.6.1"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "96de82db3224cd7615f8f7a7378fc3c931d72a9b",
  "homepage": "https://github.com/hollandben/grunt-cache-bust#readme",
  "keywords": [
    "bust",
    "bust assets",
    "cache",
    "grunt",
    "grunt plugin"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/hollandben/grunt-cache-bust/blob/master/license"
    }
  ],
  "name": "grunt-cache-bust",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "readme": "# grunt-cache-bust\n\n[![npm version](https://badge.fury.io/js/grunt-cache-bust.svg)](http://badge.fury.io/js/grunt-cache-bust)\n[![Build Status](https://travis-ci.org/hollandben/grunt-cache-bust.png?branch=master)](https://travis-ci.org/hollandben/grunt-cache-bust)\n[![Dependency Status](https://david-dm.org/hollandben/grunt-cache-bust.svg)](https://david-dm.org/hollandben/grunt-cache-bust)\n[![Join the chat at https://gitter.im/hollandben/grunt-cache-bust](https://badges.gitter.im/hollandben/grunt-cache-bust.svg)](https://gitter.im/hollandben/grunt-cache-bust?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n> Bust static assets from the cache using content hashing\n\n* [Getting Started](#getting-started)\n* [Introduction](#the-cachebust-task)\n* [How it works](#how-it-works)\n* [Options](#options)\n* [Usage Examples](#usage-examples)\n* [CDNs](#cdns)\n* [Change Log](#change-log)\n\n## PLEASE READ\nThis plugin recently upgraded to `v1.0.0`!! There was a big change in the way the plugin works. You can read me about the changes in issue [#147](https://github.com/hollandben/grunt-cache-bust/issues/147). Please let me know if you have any questions on the changes via [Gitter](https://gitter.im/hollandben/grunt-cache-bust) or [Twitter](https://twitter.com/hollandben)\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-cache-bust --save-dev\n```\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"cacheBust\" task\n\nUse the `cacheBust` task for cache busting static files in your application. This allows the assets to have a large expiry time in the browsers cache and will only be forced to use an updated file when the contents of it changes. This is a good practice.\n\nTell the `cacheBust` task where your static assets are and the files that reference them and let it work it's magic.\n\n### Supported file types\nAll of them!!\n\n### How it works\nIn your project's Gruntfile, add a new task called `cacheBust`.\n\nThis is the most basic configuration you can have:\n\n```js\ncacheBust: {\n    taskName: {\n        options: {\n            assets: ['assets/**']\n        },\n        src: ['index.html']\n    }\n}\n```\n\nThese are the two mandatory fields you need to supply:\n\nThe `assets` option that is passed to the plugin tells it what types of files you want to hash, i.e. `css` and `js` files. You must also provide the location for these files. In the example above, they live in the `assets` folder.\n\nThe `src` part of the configuration you should have seen before as it's used by pretty much every Grunt plugin. We use this to tell the plugin which files contain references to assets we're going to be adding a hash to. You can [use the `expand` configuration option here as well](http://gruntjs.com/configuring-tasks#building-the-files-object-dynamically)\n\n**To summarise, the above configuration will hash all the files in the `assets` directory and replace any references to those files in the `index.html` file.**\n\n### Options\n\n#### Summary\n\n```\n// Here is a short summary of the options and some of their \ndefaults. Extra details are below.\n{\n    algorithm: 'md5',                             // Algoirthm used for hashing files\n    assets: ['css/*', 'js/*']                     // File patterns for the assets you wish to hash\n    baseDir: './',                                // The base directory for all assets\n    createCopies: true,                           // Create hashed copies of files\n    deleteOriginals: false,                       // Delete the original file after hashing\n    encoding: 'utf8',                             // The encoding used when reading/writing files\n    hash: '9ef00db36970718e',                     // A user defined hash for every file. Not recommended.\n    jsonOutput: false,                            // Output the original => new URLs to a JSON file\n    jsonOutputFilename: 'grunt-cache-bust.json',  // The file path and name of the exported JSON. Is relative to baseDir\n    length: 16,                                   // The length of the hash value\n    separator: '.'                                // The separator between the original file name and hash\n}\n```\n\n#### options.algorithm\nType: `String`  \nDefault value: `'md5'`\n\n`algorithm` is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha1'`, `'md5'`, `'sha256'`, `'sha512'`\n\n#### options.assets\nType: `Array`\n\n`assets` contains the file patterns for where all your assets live. This should point towards all the assets you wish to have busted. It uses the same glob pattern for matching files as Grunt.\n\n\n#### options.baseDir\nType: `String`  \nDefault value: `false`\n\nWhen set, `cachebust` will try to find the assets using the baseDir as base path.\n\n```js\nassets: {\n    options: {\n        baseDir: 'public/',\n    },\n    files: [{   \n        expand: true,\n        cwd: 'public/',\n        src: ['modules/**/*.html']\n    }]\n}   \n```\n\n#### options.createCopies\nType: `Boolean`  \nDefault value: `true`\n\nWhen set to `false`, `cachebust` will not create hashed copies of the files. Useful if you use server rewrites to serve your files.\n\n#### options.deleteOriginals\nType: `Boolean`  \nDefault value: `false`\n\nWhen set, `cachebust` will delete the original versions of the files that have been hashed. For example, `style.css` will be deleted after being copied to `style.dcf1d324cb50a1f9.css`.\n\n#### options.encoding\nType: `String`  \nDefault value: `'utf8'`\n\nThe encoding of the file contents.\n\n#### options.hash\nType: `String`\n\nA user defined value to be used as the hash value for all files. For a more beneficial caching strategy, it's advised not to supply a hash value for all files.\n\n#### options.jsonOutput\nType: `Boolean`  \nDefault value: `false`\n\nWhen set as `true`, `cachbust` will create a json file with an object inside that contains key value pairs of the original file name, and the renamed md5 hash name for each file.\n\nOutput format looks like this:\n```\n{\n  '/scripts/app.js' : '/scripts/app.23e6f7ac5623e96f.js',\n  '/scripts/vendor.js': '/scripts/vendor.h421fwaj124bfaf5.js'\n}\n```\n\n#### options.jsonOutputFilename\nType: `String`  \nDefault value: `grunt-cache-bust.json`\n\nThe file path and name of the exported JSON. It is exported relative to `baseDir`.\n\n#### options.length\nType: `Number`  \nDefault value: `16`\n\nThe number of characters of the file content hash to prefix the file name with.\n\n#### options.separator\nType: `String`  \nDefault value: `.`\n\nThe separator between the original file name and hash\n\n### Usage Examples\n\n#### The most basic setup\n```js\ncacheBust: {\n    taskName: {\n        options: {\n            assets: ['assets/**']\n        },\n        src: ['index.html']\n    }\n}\n```\n\n#### Bust all assets and update references in all templates and assets\n```js\ncacheBust: {\n    options: {\n        assets: ['assets/**/*'],\n        baseDir: './public/'\n    },\n    taskName: {\n        files: [{   \n            expand: true,\n            cwd: 'public/',\n            src: ['templates/**/*.html', 'assets/**/*']\n        }]\n    }\n}\n```\n\n#### Inherited options for multiple tasks\n```js\ncacheBust: {\n    options: {\n        assets: ['assets/**'],\n        baseDir: './public/'\n    },\n    staging: {\n        options: {\n            jsonOutput: true\n        },\n        src: ['index.html']\n    },\n    production: {\n        options: {\n            jsonOutput: false\n        },\n        src: ['index.html']\n    }\n}\n```\n\n# License\n\nMIT © [Ben Holland](https://benholland.me)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hollandben/grunt-cache-bust.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.1.1"
}
